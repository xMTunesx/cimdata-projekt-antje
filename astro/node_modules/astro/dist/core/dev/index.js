import { polyfill } from "@astrojs/webapi";
import { performance } from "perf_hooks";
import { createVite } from "../create-vite.js";
import { defaultLogOptions, info, warn } from "../logger.js";
import * as vite from "vite";
import * as msg from "../messages.js";
import { getResolvedHostForVite } from "./util.js";
async function dev(config, options = { logging: defaultLogOptions }) {
  var _a;
  const devStart = performance.now();
  polyfill(globalThis, {
    exclude: "window document"
  });
  const host = getResolvedHostForVite(config);
  const viteUserConfig = vite.mergeConfig({
    mode: "development",
    server: { host }
  }, config.vite || {});
  const viteConfig = await createVite(viteUserConfig, { astroConfig: config, logging: options.logging, mode: "dev" });
  const viteServer = await vite.createServer(viteConfig);
  await viteServer.listen(config.devOptions.port);
  const devServerAddressInfo = viteServer.httpServer.address();
  const site = config.buildOptions.site ? new URL(config.buildOptions.site) : void 0;
  info(options.logging, null, msg.devStart({ startupTime: performance.now() - devStart, config, devServerAddressInfo, site, https: !!((_a = viteUserConfig.server) == null ? void 0 : _a.https) }));
  const currentVersion = "0.24.3";
  if (currentVersion.includes("-")) {
    warn(options.logging, null, msg.prerelease({ currentVersion }));
  }
  return {
    address: devServerAddressInfo,
    stop: () => viteServer.close()
  };
}
export {
  dev as default
};
