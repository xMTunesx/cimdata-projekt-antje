const localIps = /* @__PURE__ */ new Set(["localhost", "127.0.0.1"]);
function pad(input, minLength, dir) {
  let output = input;
  while (output.length < minLength) {
    output = dir === "left" ? " " + output : output + " ";
  }
  return output;
}
function emoji(char, fallback) {
  return process.platform !== "win32" ? char : fallback;
}
function getResolvedHostForVite(config) {
  if (config.devOptions.host === false && config.devOptions.hostname !== "localhost") {
    return config.devOptions.hostname;
  } else {
    return config.devOptions.host;
  }
}
function getLocalAddress(serverAddress, config) {
  const host = getResolvedHostForVite(config);
  if (typeof host === "boolean" || host === "localhost") {
    return "localhost";
  } else {
    return serverAddress;
  }
}
function getNetworkLogging(config) {
  const host = getResolvedHostForVite(config);
  if (host === false) {
    return "host-to-expose";
  } else if (typeof host === "string" && localIps.has(host)) {
    return "none";
  } else {
    return "visible";
  }
}
export {
  emoji,
  getLocalAddress,
  getNetworkLogging,
  getResolvedHostForVite,
  localIps,
  pad
};
