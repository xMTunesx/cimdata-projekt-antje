import eol from "eol";
import fs from "fs";
import { codeFrame } from "../../util.js";
async function errorHandler(e, { viteServer, filePath }) {
  if (e.stack) {
    e.stack = eol.lf(e.stack);
  }
  if (e instanceof Error) {
    viteServer.ssrFixStacktrace(e);
  }
  if (Array.isArray(e.errors)) {
    const { location, pluginName, text } = e.errors[0];
    const err = e;
    if (location)
      err.loc = { file: location.file, line: location.line, column: location.column };
    let src = err.pluginCode;
    if (!src && err.id && fs.existsSync(err.id))
      src = await fs.promises.readFile(err.id, "utf8");
    if (!src)
      src = await fs.promises.readFile(filePath, "utf8");
    err.frame = codeFrame(src, err.loc);
    err.id = location == null ? void 0 : location.file;
    err.message = `${location == null ? void 0 : location.file}: ${text}
${err.frame}
`;
    if (pluginName)
      err.plugin = pluginName;
    throw err;
  }
  throw e;
}
export {
  errorHandler
};
