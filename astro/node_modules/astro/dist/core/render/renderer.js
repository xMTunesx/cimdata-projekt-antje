import npath from "path";
async function createRenderer(renderer, impl) {
  const resolvedRenderer = {};
  const {
    default: { name, client, polyfills, hydrationPolyfills, server }
  } = await impl.renderer(renderer);
  resolvedRenderer.name = name;
  if (client)
    resolvedRenderer.source = npath.posix.join(renderer, client);
  resolvedRenderer.serverEntry = npath.posix.join(renderer, server);
  if (Array.isArray(hydrationPolyfills))
    resolvedRenderer.hydrationPolyfills = hydrationPolyfills.map((src) => npath.posix.join(renderer, src));
  if (Array.isArray(polyfills))
    resolvedRenderer.polyfills = polyfills.map((src) => npath.posix.join(renderer, src));
  const { default: rendererSSR } = await impl.server(resolvedRenderer.serverEntry);
  resolvedRenderer.ssr = rendererSSR;
  const completedRenderer = resolvedRenderer;
  return completedRenderer;
}
export {
  createRenderer
};
